#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
/*-----( Sabitleri ve pin numaralarini belirtiyoruz )-----*/
#define CE_PIN 6
#define CSN_PIN 8

// const uint64_t pipe = 0xE8E8F0F0E1LL; // Pipe tanimliyoruz

#define light_Front  18     //On Sag LED   pin A4 Arduino Uno
#define light_Back   19     //Arka Sag LED    pin A5 Arduino Uno
#define horn_Buzz    7     

#define ENA_m1 3          // Motoru etkinlestir/hizlandir On Sag
#define ENB_m1 5          // Motoru etkinlestir/hizlandir Arka Sag
#define ENA_m2 9          // Motoru etkinlestir/hizlandir On Sol
#define ENB_m2 10         // Motoru etkinlestir/hizlandir Arka Sol

#define IN_11  0          // L298N #1 in 1 motor On Sag
#define IN_12  1          // L298N #1 in 2 motor On Sag
#define IN_13  2          // L298N #1 in 3 motor Arka Sag
#define IN_14  4          // L298N #1 in 4 motor Arka Sag

#define IN_21  14         // L298N #2 in 1 motor On Sol
#define IN_22  15         // L298N #2 in 2 motor On Sol
#define IN_23  16         // L298N #2 in 3 motor Arka Sol
#define IN_24  17         // L298N #2 in 4 motor Arka Sol

/*-----( Nesneleri belirt )-----*/
RF24 radio(CE_PIN, CSN_PIN); // Radio olustur
/*-----( Degiskenleri belirt )-----*/
int joystick[6];  // Joystick'in ve 4 adet butonun okunmasini tutan 6lı element dizisi
int speedRight = 0;
int speedLeft = 0;
int  xAxis, yAxis;
// joystickteki 4 adet buton degiskeni
int buttonUp;
int buttonRight;
int buttonDown;
int buttonLeft;

void setup()
{
  pinMode(light_Front, OUTPUT);
  pinMode(light_Back, OUTPUT);
  pinMode(horn_Buzz, OUTPUT);
    
  pinMode(ENA_m1, OUTPUT);
  pinMode(ENB_m1, OUTPUT);
  pinMode(ENA_m2, OUTPUT);
  pinMode(ENB_m2, OUTPUT);
  
  pinMode(IN_11, OUTPUT);
  pinMode(IN_12, OUTPUT);
  pinMode(IN_13, OUTPUT);
  pinMode(IN_14, OUTPUT);
    
  pinMode(IN_21, OUTPUT);
  pinMode(IN_22, OUTPUT);
  pinMode(IN_23, OUTPUT);
  pinMode(IN_24, OUTPUT);

/*  Serial.begin(9600);
  Serial.println("Nrf24L01 Alici Baslatiliyor"); */
  
  radio.begin();
  radio.openReadingPipe(1,pipe);
  radio.startListening();
}

void loop()
{
  if ( radio.available() )
  {
      radio.read( joystick, sizeof(joystick) );
      xAxis = joystick[0];
      yAxis = joystick[1];
      
      // joystickteki 4 adet buton degiskeni
      int buttonUp    = joystick[2];
      int buttonRight = joystick[3];
      int buttonDown  = joystick[4];
      int buttonLeft  = joystick[5];
      
      //Serial.println(); //  debugging
      // Debugging kodu asagida
  
      if (buttonUp == HIGH){digitalWrite(horn_Buzz, LOW);}
        else {digitalWrite(horn_Buzz, HIGH);}
      if (buttonRight == HIGH){digitalWrite(light_Front, LOW);}
        else {digitalWrite(light_Front, HIGH);}
      if (buttonLeft == HIGH){digitalWrite(light_Back, LOW);}
        else {digitalWrite(light_Back, HIGH);}

// Y-axis One ve geriye kontrol
    if (yAxis < 470) {
    // Sag motorlari geriye ayarladik
    digitalWrite(IN_11, LOW);
    digitalWrite(IN_12, HIGH);
    digitalWrite(IN_13, HIGH);
    digitalWrite(IN_14, LOW);
    // Sol motorlari geriye ayarladik
    digitalWrite(IN_21, HIGH);
    digitalWrite(IN_22, LOW);
    digitalWrite(IN_23, LOW);
    digitalWrite(IN_24, HIGH);
    
    // Geriye giderken motor hizini arttirmak icin PWM sinyalini azalan Y eksen degerlerini 470ten 0a'dan 0dan 255'e seklinde ayarlayin
    speedRight  = map(yAxis, 470, 0, 0, 255);
    speedLeft   = map(yAxis, 470, 0, 0, 255);
  }

else if (yAxis > 550) {
    // Set Right Motors forward
    digitalWrite(IN_11, HIGH);
    digitalWrite(IN_12, LOW);
    digitalWrite(IN_13, LOW);
    digitalWrite(IN_14, HIGH);
    // Set Left Motors forward
    digitalWrite(IN_21, LOW);
    digitalWrite(IN_22, HIGH);
    digitalWrite(IN_23, HIGH);
    digitalWrite(IN_24, LOW);
 
    // One giderken motor hizini arttirmak icin PWM sinyalini artan Y ekseninde 550-1023ten 0-255'e ayarlayin
    speedRight  = map(yAxis, 550, 1023, 0, 255);
    speedLeft   = map(yAxis, 550, 1023, 0, 255);
  }
  // Joystick ortada kalirsa motorlar hareket etmeyecek
  else {
    speedRight  = 0;
    speedLeft   = 0;
  }

// Sol sag kontrolleri icin X eksenini ayarlama
  if (xAxis < 470) {
    // Azalan X-axis okumalarini 470-0'dan artan 0'dan 255'e ayarliyoruz
    int xMapped = map(xAxis, 470, 0, 0, 255);
    // Sola hareket - sol motor hizini azaltma, sag motor hizini arttirma
    speedLeft = speedLeft - xMapped;
    speedRight = speedRight + xMapped;
    // Menzili 0 - 255 arasina ayarla
    if (speedLeft < 0) {
      speedLeft = 0;
    }
    if (speedRight > 255) {
      speedRight = 255;
    }
  }
  if (xAxis > 550) {
    // Artan X-ekseni okumalarini 550den 1023'e durumundan 0'dan 255'e ayarla
    int xMapped = map(xAxis, 550, 1023, 0, 255);
    // Saga hareket - sag motor hizini azalt, sol motor hizini arttir
    speedLeft = speedLeft + xMapped;
    speedRight = speedRight - xMapped;
    // Confine the range from 0 to 255
    if (speedLeft > 255) {
      speedLeft = 255;
    }
    if (speedRight < 0) {
      speedRight = 0;
    }
  }
  // Dusuk hizlarda kornayı engelle (motorlariniza gore ayarlayin degeri)
  if (speedLeft < 70) {
    speedLeft = 0;
  }
  if (speedRight < 70) {
    speedRight = 0;
  }

  analogWrite(ENA_m1, speedRight); // A motoruna PWM sinyali gonder
  analogWrite(ENB_m1, speedRight);
  analogWrite(ENA_m2, speedLeft); // B motoruna PWM sinyali gonder
  analogWrite(ENB_m2, speedLeft);
     
  /*    Serial.print("X = ");
      Serial.print(xAxis);
      Serial.print(" Y = ");  
      Serial.print(yAxis);
      Serial.print(" Up = ");
      Serial.print(joystick[2]);
      Serial.print(" Right = ");  
      Serial.print(joystick[3]);
      Serial.print(" Down = ");
      Serial.print(joystick[4]);
      Serial.print(" Left = ");  
      Serial.println(joystick[5]); */
      
      
      
      }

      
  }
